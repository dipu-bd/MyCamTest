/*
 * Copyright (C) 2016 Sudipto Chandra.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package org.alulab.mycamtest;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import marvin.gui.MarvinImagePanel;

/**
 *
 * @author Dipu
 */
public class MyCam extends javax.swing.JFrame {

    final SimpleVideoTest mCamTest;
    private MarvinImagePanel mVideoPanel;

    /**
     * Creates new form MyCam
     */
    public MyCam() {
        initComponents();

        mVideoPanel = new MarvinImagePanel();
        mCamTest = new SimpleVideoTest(mVideoPanel);
        videoHolder.add(mVideoPanel);

        runTimer();
        mCamTest.startProcessing();
    }

    public void runTimer() {
        Timer t = new Timer(999, new ActionListener() {
            long prev = 0;
            double rate = 0;

            @Override
            public void actionPerformed(ActionEvent ae) {
                rate = ((mCamTest.SAMPLES - prev) + rate) / 2.0;
                sampleCount.setText(String.format("%.2f samples/sec", rate));
                prev = mCamTest.SAMPLES;
            }
        });
        t.start();
    }

    public void takePhoto() {
        mCamTest.stopProcessing();
        JFileChooser jfc = new JFileChooser();
        jfc.setSelectedFile(new File("MyCamCapture.png"));
        jfc.setFileFilter(new FileNameExtensionFilter("PNG File", "png"));
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            mCamTest.saveImage(jfc.getSelectedFile());
        }
        mCamTest.startProcessing();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        grayButton = new javax.swing.JToggleButton();
        sepiaButton = new javax.swing.JToggleButton();
        edgeButton = new javax.swing.JToggleButton();
        invertButton = new javax.swing.JToggleButton();
        tvButton = new javax.swing.JToggleButton();
        mosaicButton = new javax.swing.JToggleButton();
        motionButton = new javax.swing.JToggleButton();
        myOwnButton = new javax.swing.JToggleButton();
        sampleCount = new javax.swing.JLabel();
        pixelizeButton = new javax.swing.JToggleButton();
        gaussianButton = new javax.swing.JToggleButton();
        backgroundButton = new javax.swing.JToggleButton();
        photoButton = new javax.swing.JButton();
        videoHolder = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyCam Test"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 70, 70));

        grayButton.setText("GrayScale"); // NOI18N
        grayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayButtonActionPerformed(evt);
            }
        });

		sepiaButton.setText("Sepia"); // NOI18N
        sepiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sepiaButtonActionPerformed(evt);
            }
        });

        edgeButton.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        edgeButton.setText("Detect Edge");
        edgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edgeButtonActionPerformed(evt);
            }
        });

        invertButton.setText("Invert"); // NOI18N
        invertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertButtonActionPerformed(evt);
            }
        });

        tvButton.setText("Television"); // NOI18N
        tvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tvButtonActionPerformed(evt);
            }
        });

        mosaicButton.setText("Mosaic"); // NOI18N
        mosaicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mosaicButtonActionPerformed(evt);
            }
        });

        motionButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        motionButton.setForeground(new java.awt.Color(102, 102, 0));
        motionButton.setText("Detect Motion");
        motionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motionButtonActionPerformed(evt);
            }
        });

        myOwnButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        myOwnButton.setForeground(new java.awt.Color(0, 51, 51));
        myOwnButton.setText("Custom");
        myOwnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOwnButtonActionPerformed(evt);
            }
        });

        sampleCount.setBackground(new java.awt.Color(255, 255, 255));
        sampleCount.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        sampleCount.setForeground(new java.awt.Color(255, 255, 255));
        sampleCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sampleCount.setText("-");

        pixelizeButton.setText("Pixelize"); // NOI18N
        pixelizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pixelizeButtonActionPerformed(evt);
            }
        });

        gaussianButton.setText("Gaussian"); // NOI18N
        gaussianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gaussianButtonActionPerformed(evt);
            }
        });

        backgroundButton.setText("Find Background"); // NOI18N
        backgroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundButtonActionPerformed(evt);
            }
        });

        photoButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        photoButton.setForeground(new java.awt.Color(0, 0, 102));
        photoButton.setText("Take Snapshot"); // NOI18N
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(photoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(mosaicButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tvButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(motionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myOwnButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sampleCount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gaussianButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pixelizeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backgroundButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sepiaButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(invertButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edgeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(grayButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(photoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(motionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(invertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(edgeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(tvButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(mosaicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(grayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(pixelizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(gaussianButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(backgroundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(sampleCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(myOwnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout videoHolderLayout = new javax.swing.GroupLayout(videoHolder);
        videoHolder.setLayout(videoHolderLayout);
        videoHolderLayout.setHorizontalGroup(
            videoHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        videoHolderLayout.setVerticalGroup(
            videoHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(videoHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(videoHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void grayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayButtonActionPerformed
        mCamTest.useGrayScale.set(grayButton.isSelected());
    }//GEN-LAST:event_grayButtonActionPerformed

    private void sepiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sepiaButtonActionPerformed
        mCamTest.useSepia.set(sepiaButton.isSelected());
    }//GEN-LAST:event_sepiaButtonActionPerformed

    private void edgeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edgeButtonActionPerformed
        mCamTest.useEdgeDetector.set(edgeButton.isSelected());
    }//GEN-LAST:event_edgeButtonActionPerformed

    private void invertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertButtonActionPerformed
        mCamTest.useInvert.set(invertButton.isSelected());
    }//GEN-LAST:event_invertButtonActionPerformed

    private void tvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tvButtonActionPerformed
        mCamTest.useTV.set(tvButton.isSelected());
    }//GEN-LAST:event_tvButtonActionPerformed

    private void mosaicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mosaicButtonActionPerformed
        mCamTest.useMosaic.set(mosaicButton.isSelected());
    }//GEN-LAST:event_mosaicButtonActionPerformed

    private void motionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motionButtonActionPerformed
        mCamTest.useCompareRegion.set(motionButton.isSelected());
    }//GEN-LAST:event_motionButtonActionPerformed

    private void myOwnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOwnButtonActionPerformed
        mCamTest.useMyOwn.set(myOwnButton.isSelected());
    }//GEN-LAST:event_myOwnButtonActionPerformed

    private void pixelizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pixelizeButtonActionPerformed
        mCamTest.usePixelize.set(pixelizeButton.isSelected());
    }//GEN-LAST:event_pixelizeButtonActionPerformed

    private void gaussianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gaussianButtonActionPerformed
        mCamTest.useGaussianBlur.set(gaussianButton.isSelected());
    }//GEN-LAST:event_gaussianButtonActionPerformed

    private void backgroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundButtonActionPerformed
        mCamTest.useBackground.set(backgroundButton.isSelected());
    }//GEN-LAST:event_backgroundButtonActionPerformed

    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed
        takePhoto();
    }//GEN-LAST:event_photoButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyCam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton backgroundButton;
    private javax.swing.JToggleButton edgeButton;
    private javax.swing.JToggleButton gaussianButton;
    private javax.swing.JToggleButton grayButton;
    private javax.swing.JToggleButton invertButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton mosaicButton;
    private javax.swing.JToggleButton motionButton;
    private javax.swing.JToggleButton myOwnButton;
    private javax.swing.JButton photoButton;
    private javax.swing.JToggleButton pixelizeButton;
    private javax.swing.JLabel sampleCount;
    private javax.swing.JToggleButton sepiaButton;
    private javax.swing.JToggleButton tvButton;
    private javax.swing.JPanel videoHolder;
    // End of variables declaration//GEN-END:variables
}
